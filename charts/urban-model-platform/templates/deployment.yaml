apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ump.fullname" . }}
  labels:
    app.kubernetes.io/name: urban-model-platform-api
    app.kubernetes.io/component: api
    app.kubernetes.io/part-of: urban-model-platform
    {{- include "ump.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "ump.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "ump.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "ump.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.targetPort }}
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: providers-volume
              mountPath: {{ .Values.config.providersFilePath | quote }}
              subPath: providers.yaml
              readOnly: true
          envFrom:
            - configMapRef: 
                name: {{ include "ump.fullname" . }}-settings
            - secretRef:
              name: {{ .Values.keycloakConnection.existingSecret.name }}
          env:
            # postgres connection
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgresConnection.existingSecret.name }}
                  key: dbname
            - name: POSTGRES_HOST
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgresConnection.existingSecret.name }}
                  key: host
            - name: POSTGRES_PORT
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgresConnection.existingSecret.name }}
                  key: port
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgresConnection.existingSecret.name }}
                  key: user
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgresConnection.existingSecret.name }}
                  key: password
            # keycloak connection
            {{- if .Values.keycloakConnection.existingSecret.name }}
            - name: KEYCLOAK_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.keycloakConnection.existingSecret.name }}
                  key: user
            - name: KEYCLOAK_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.keycloakConnection.existingSecret.name }}
                  key: password
            - name: KEYCLOAK_HOST
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.keycloakConnection.existingSecret.name }}
                  key: host
            - name: KEYCLOAK_PORT_EXTERNAL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.keycloakConnection.existingSecret.name }}
                  key: port
            - name: KEYCLOAK_PROTOCOL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.keycloakConnection.existingSecret.name }}
                  key: protocol
            {{- end }}
      volumes:
        - name: providers-volume
          configMap:
          {{- if not .Values.existingProvidersConfigMap }}
            name: {{ include "ump.fullname" . }}-providers
          {{- else }}
            name: {{ .Values.existingProvidersConfigMap }}
          {{- end }}
        {{- if not .Values.keycloakConnection.existingSecret.name }}
        - name: keycloak-config
          secret:
            secretName: {{ include "ump.fullname" . -}}-keycloak-connection
            defaultMode: 0400
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}