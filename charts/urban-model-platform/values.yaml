replicaCount: 1

image:
  repository: lgvanalytics.azurecr.io/urban-model-platform
  pullPolicy: IfNotPresent
  tag: "dev_improvements"

labels: 
    instance: test-ump
    name: ump

imagePullSecrets:
  - name: test-secret3

resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 100m
    memory: 128Mi

service:
  type: ClusterIP
  port: 5000

config:
  apiCorsUrlRegex: "*"
  apiPortExternal: "5000"
  apiServerUrl: "0.0.0.0:5000"
  providersFilePath: "/usr/src/app/providers.yml"

postgresConnection: 
  existingSecret:
    name: postgres-credentials
    keyUser: POSTGRES_USER
    keyPassword: POSTGRES_PASSWORD
  host: POSTGRES_HOST
  port: POSTGRES_PORT
  database: POSTGRES_DB

keycloakConnection:
  host: "localhost:8081"
  protocol: "http"
  existingSecret: 
    name: keycloak-credentials
    keyUser: POSTGRES_USER
    keyPassword: POSTGRES_PASSWORD
    keyClientId: CLIENT_ID
  clientId: "example_client"
  realmName: example_realm

# If configMap for providers is already existing and should not be overwritten, set this to true. Default: false
existingProvidersConfigMap: false

providersContent: |
  modelserver:
    name: "modelserver"
    url: "http://localhost:5005" 
    authentication:
      type: "BasicAuth"
      user: "user"
      password: "password"
    timeout:  1800
    processes:
      hello-world:
        result-storage: "remote"
        anonymous-access: True
      squareroot:
        result-storage: "remote"
        anonymous-access: True
      hello-geo-world:
        result-storage: "remote"  

# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 2
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

tolerations: 
  - key: ump/reservedFor
    operator: "Equal" 
    value: app
    effect: NoSchedule
  - key: ump/reservedFor
    operator: "Equal" 
    value: app
    effect: NoExecute

#This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
podAnnotations: {}

# This is for setting Kubernetes Labels to a Pod.
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}

resources: {}

# Additional volumes on the output Deployment definition.
volumes: []

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []

affinity: {}

ingress:
  enabled: false



