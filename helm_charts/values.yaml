# Default values for ump-api-dev.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: lgvanalytics.azurecr.io/urban-model-platform
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "dev_improvements"

labels: 
    app.kubernetes.io/instance: test-ump-api-dev
    app.kubernetes.io/name: ump-api-dev

# This is for the secretes for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets:
  - name: test-secret3

postgres: 
  existingSecret: postgres-credentials
  existingSecretKeyUser: POSTGRES_USER
  existingSecretKeyPassword: POSTGRES_PASSWORD
  existingSecretKeyHost: POSTGRES_HOST
  existingSecretKeyPort: POSTGRES_PORT
  existingSecretKeyDatabase: POSTGRES_DB

# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

#This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/ 
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

# nodeSelector:
#   ump/reservedFor: app

tolerations: 
  - key: ump/reservedFor
    operator: "Equal" 
    value: app
    effect: NoSchedule
  - key: ump/reservedFor
    operator: "Equal" 
    value: app
    effect: NoExecute

# podSecurityContext: 
#   runAsUser: 1000
#   runAsGroup: 1000
#   fsGroup: 1000
#   runAsNonRoot: true
#   seccompProfile:
#     type: RuntimeDefault # this is not the most restrictive setting

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  port: 5000


resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
# livenessProbe:
#   httpGet:
#     path: /
#     port: http
# readinessProbe: 
#   httpGet:
#     path: /api/processes
#     port: 5000
#   initialDelaySeconds: 30
#   timeoutSeconds: 5
#   periodSeconds: 10

#This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 2
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

# nodeSelector:
#   ump.reservedFor: app

affinity: {}

# configFiles:
#   providers: 
#     enabled: true
#     path: /home/pythonuser/providers.yaml

config:
  corsUrlRegex: "*"
  webappPortExternal: "5000"
  apiServerUrl: "0.0.0.0:5000"
  keycloakHost: "localhost:8081"
  keycloakProtocol: "http"
  keycloakUser: "admin"
  keycloakPassword: "admin"
  requestsCABundle: "/etc/ssl/certs/ca-certificates.crt"
  sslCertFile: "/etc/ssl/certs/ca-certificates.crt"
  providersFilePath: "/usr/src/app/providers.yml"
  providersContent: |
    modelserver:
      name: "modelserver"
      url: "http://localhost:5005" 
      authentication:
        type: "BasicAuth"
        user: "user"
        password: "password"
      timeout:  1800
      processes:
        hello-world:
          result-storage: "remote"
          anonymous-access: True
        squareroot:
          result-storage: "remote"
          anonymous-access: True
        hello-geo-world:
          result-storage: "remote"


