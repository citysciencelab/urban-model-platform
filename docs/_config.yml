# Book settings
# Learn more at https://jupyterbook.org/customize/config.html

# Add a bibtex file so that we can create citations
bibtex_bibfiles:
  - references.bib

#######################################################################################
# Book settings
title: "urban-model-platform" # The title of the book. Will be placed in the left navbar.
author: "Rico Herzog, maja, Richter, Stefan Schuhart" # The author of the book
copyright: "2024" # Copyright year to be placed in the footer
logo: csl-logo.jpg # A path to the book logo
# Patterns to skip when building the book. Can be glob-style (e.g. "*skip.ipynb")
exclude_patterns: [_build, Thumbs.db, .DS_Store, "**.ipynb_checkpoints"]
# Auto-exclude files not in the toc
only_build_toc_files: true

#######################################################################################
# Execution settings
execute:
  execute_notebooks: auto # Whether to execute notebooks at build time. Must be one of ("auto", "force", "cache", "off")
  cache: "" # A path to the jupyter cache that will be used to store execution artifacts. Defaults to `_build/.jupyter_cache/`
  exclude_patterns: [] # A list of patterns to *skip* in execution (e.g. a notebook that takes a really long time)
  timeout: 30 # The maximum time (in seconds) each notebook cell is allowed to run.
  run_in_temp:
    false # If `True`, then a temporary directory will be created and used as the command working directory (cwd),
    # otherwise the notebook's parent directory will be the cwd.
  allow_errors: false # If `False`, when a code cell raises an error the execution is stopped, otherwise all cells are always run.
  stderr_output: show # One of 'show', 'remove', 'remove-warn', 'warn', 'error', 'severe'

#######################################################################################
# Parse and render settings
parse:
  myst_enable_extensions: # default extensions to enable in the myst parser. See https://myst-parser.readthedocs.io/en/latest/using/syntax-optional.html
    # - amsmath
    - colon_fence
    # - deflist
    - dollarmath
    # - html_admonition
    # - html_image
    - linkify
    # - replacements
    # - smartquotes
    - substitution
    - tasklist
  myst_url_schemes: [mailto, http, https] # URI schemes that will be recognised as external URLs in Markdown links
  myst_dmath_double_inline: true # Allow display math ($$) within an inline context

#######################################################################################
# HTML-specific settings
html:
  favicon: "" # A path to a favicon image
  use_edit_page_button: false # Whether to add an "edit this page" button to pages. If `true`, repository information in repository: must be filled in
  use_repository_button: false # Whether to add a link to your repository button
  use_issues_button: false # Whether to add an "open an issue" button
  use_multitoc_numbering: true # Continuous numbering across parts/chapters
  extra_navbar: Powered by <a href="https://jupyterbook.org">Jupyter Book</a> # Will be displayed underneath the left navbar.
  extra_footer: "" # Will be displayed underneath the footer.
  google_analytics_id: "" # A GA id that can be used to track book views.
  home_page_in_navbar: true # Whether to include your home page in the left Navigation Bar
  baseurl: "" # The base URL where your book will be hosted. Used for creating image previews and social links. e.g.: https://mypage.com/mybook/
  comments:
    hypothesis: false
    utterances: false
  announcement: "" # A banner announcement at the top of the site.

#######################################################################################
# LaTeX-specific settings
latex:
  latex_engine: pdflatex # one of 'pdflatex', 'xelatex' (recommended for unicode), 'luatex', 'platex', 'uplatex'
  use_jupyterbook_latex: true # use sphinx-jupyterbook-latex for pdf builds as default
  # Define the name of the latex output file for PDF builds
  latex_documents:
    targetname: book.tex

#######################################################################################
# Launch button settings
launch_buttons:
  notebook_interface: classic # The interface interactive links will activate ["classic", "jupyterlab"]
  binderhub_url: https://mybinder.org # The URL of the BinderHub (e.g., https://mybinder.org)
  jupyterhub_url: "" # The URL of the JupyterHub (e.g., https://datahub.berkeley.edu)
  thebe: false # Add a thebe button to pages (requires the repository to run on Binder)
  colab_url: "" # The URL of Google Colab (https://colab.research.google.com)

# Information about where the book exists on the web
repository:
  url: "https://github.com/geowerkstatt-hamburg/urban-model-platform" # The URL to your book's repository
  path_to_book: "docs" # A path to your book's folder, relative to the repository root.
  branch: dev # Which branch of the repository should be used when creating links

#######################################################################################
# Advanced and power-user settings
sphinx:
  local_extensions: # A list of local extensions to load by sphinx specified by "name: path" items
  recursive_update: false # A boolean indicating whether to overwrite the Sphinx config (true) or recursively update (false)
  extra_extensions:
    - "autoapi.extension" # automatic overview for each function in the package
    - "sphinx.ext.napoleon" # different docstring styles enabled
    - "sphinx.ext.viewcode" # documentation allows 'show source' button to display the code
    - "sphinxcontrib.autoyaml" # automatically create ducumentation for commented yaml file
  config:
    autoapi_dirs: ["../src"] # crawl src directory for modules to be documented
    autoapi_options:
      - "members"
      - "undoc-members"
      - "private-members"
      - "show-inheritance"
      - "show-module-summary"
      - "special-members"
      # - imported-members'

    autoyaml_root: ../ # Look for YAML files relatively to this directory.
    autoyaml_doc_delimiter: "###" # (###) Character(s) which start a documentation comment.
    autoyaml_comment: "#" # (#) Comment start character(s).
    autoyaml_level: 4 # (1) Parse comments from nested structures n-levels deep.
