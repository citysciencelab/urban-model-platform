networks:
  dev:
    external: true
    name: ${DOCKER_NETWORK}
services:
  nginx:
    container_name: ump-nginx
    image: nginx:stable
    ports:
      - ${NGINX_PORT_EXTERNAL}:${NGINX_PORT_INTERNAL}
    volumes:
      - ./nginx/default-local.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - api
      - geoserver
      - modelserver
    networks:
      - dev

  postgis:
    container_name: ump-postgis
    image: postgis/postgis:14-3.3
    ports: 
      - 5433:${POSTGRES_PORT}
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
      - ./src/ump/initializers/db/:/docker-entrypoint-initdb.d/
      - ./postgresql_data:/var/lib/postgresql/data/
    networks:
      - dev

  api:
    container_name: ump-api
    build:
      dockerfile: Dockerfile
    #env_file: .env
    ports:
      - ${WEBAPP_PORT_EXTERNAL}:5000
    volumes:
      - ./providers.yaml:/home/pythonuser/providers.yaml
    environment:
      API_SERVER_URL: http://localhost:5003
      NUMBER_OF_WORKERS: 1
      FETCH_JOB_RESULT_INTERVAL: 5
      LOGLEVEL: DEBUG
      FLASK_DEBUG: 1
      PROVIDERS_FILE: /home/pythonuser/providers.yaml
      CORS_URL_REGEX: "*"
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
      KEYCLOAK_HOST: localhost:8081
      KEYCLOAK_PROTOCOL: http
      KEYCLOAK_PORT_EXTERNAL: 8081
      KEYCLOAK_PORT_INTERNAL: 8080
      REQUESTS_CA_BUNDLE: /etc/ssl/certs/ca-certificates.crt
      SSL_CERT_FILE: /etc/ssl/certs/ca-certificates.crt
      POSTGRES_DB: cut_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGDATA: /var/lib/postgresql/data
      POSTGRES_HOST: localhost
      POSTGRES_PORT: 5432
    networks:
      - dev

  geoserver:
    container_name: ump-geoserver
    image: kartoza/geoserver:2.22.0
    ports:
      - ${GEOSERVER_PORT_EXTERNAL}:${GEOSERVER_PORT_INTERNAL}
    environment:
      - GEOSERVER_ADMIN_USER=admin
      - GEOSERVER_ADMIN_PASSWORD=geoserver
    depends_on:
      - postgis
    volumes:
      - ./geoserver_data:/opt/geoserver/data_dir
    networks:
      - dev

  modelserver:
    container_name: ump-modelserver
    image: lgvudh.azurecr.io/analytics/example_ogcapi_processes:main
    ports:
      - ${PYGEOAPI_SERVER_PORT_EXTERNAL}:${PYGEOAPI_SERVER_PORT_INTERNAL}
    env_file: .env
    volumes:
      - ./modelserver_example/pygeoapi-config.yml:/home/pythonuser/pygeoapi-config.yaml
      - ./modelserver_example/example-openapi.yml:/home/pythonuser/pygeoapi-openapi.yaml
    command: [
      '/bin/bash', '-c',
      'pygeoapi openapi generate /home/pythonuser/pygeoapi-config.yaml --output-file /home/pythonuser/pygeoapi-openapi.yaml && pygeoapi serve --flask'
    ]
    networks:
      - dev

  keycloak:
    container_name: ump-keycloak
    image: quay.io/keycloak/keycloak:25.0
    ports: 
      - ${KEYCLOAK_PORT_EXTERNAL}:${KEYCLOAK_PORT_INTERNAL}
    environment:
      KEYCLOAK_ADMIN: ${KEYCLOAK_USER}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_PASSWORD}
      KC_DB: postgres
      KC_DB_URL_HOST: postgis
      KC_DB_URL_PORT: 5432
      KC_DB_URL_DATABASE: keycloak
      KC_DB_USERNAME: ${POSTGRES_USER}
      KC_DB_PASSWORD: ${POSTGRES_PASSWORD}
      KC_HOSTNAME: localhost
      KC_HOSTNAME_PATH: /auth
      KC_HTTP_RELATIVE_PATH: /auth
    depends_on:
      - postgis
    command: ['start', '--proxy-headers', 'xforwarded', '--http-enabled', 'true']
    networks:
      - dev