#---- App settings ----
# The API_SERVER_URL is only used to return the complete URL in the result of the job details as specified in OGC.
# Should be the base url to the api.
WEBAPP_PORT_EXTERNAL=5003
API_SERVER_URL=api:5000
NUMBER_OF_WORKERS=1
FETCH_JOB_RESULT_INTERVAL=5

LOGLEVEL=DEBUG
FLASK_DEBUG=1

# origin to allow requests from: as regular expression or string.
# Include both the schema and the port (if not 80 or 443).
# Please provide the url to the frontend.
# default: "*"
CORS_URL_REGEX="http://localhost:5003"

#---- geoserver settings ----
GEOSERVER_WORKSPACE=CUT
GEOSERVER_ADMIN_USER=admin
GEOSERVER_ADMIN_PASSWORD=geoserver
GEOSERVER_BASE_URL=geoserver:8080/geoserver
GEOSERVER_DATA_DIR=/opt/geoserver/data_dir
GEOSERVER_PORT=8080
GEOSERVER_POSTGIS_HOST=postgis
EXISTING_DATA_DIR=true
GEOWEBCACHE_CACHE_DIR=/opt/geoserver/cache_dir
INITIAL_MEMORY=2g
MAXIMUM_MEMORY=8g
STABLE_EXTENSIONS=[]
COMMUNITY_EXTENSIONS=[]

#---- postgresql/postgis settings ----
POSTGRES_DB=cut_dev
POSTGRES_USER=postgres
POSTGRES_PASSWORD=postgres
PGDATA=/var/lib/postgresql/data
POSTGRES_HOST=postgis
POSTGRES_PORT=5432

#---- pygeoapi server settings
PYGEOAPI_CONFIG=/home/pythonuser/pygeoapi-config.yaml
PYGEOAPI_OPENAPI=/home/pythonuser/pygeoapi-openapi.yaml
PYGEOAPI_SERVER_HOST=localhost
PYGEOAPI_SERVER_PORT=5000
PYGEOAPI_SERVER_PORT_CONTAINER=5005

#---- Dev environment settings ----
DOCKER_NETWORK=dev

#---- Docker build settings ----
CONTAINER_REGISTRY=lgvudh.azurecr.io
CONTAINER_NAMESPACE=analytics
IMAGE_NAME=urban-model-platform
IMAGE_TAG=1.1.0

#---- Keycloak ----
KEYCLOAK_USER=admin
KEYCLOAK_PASSWORD=admin
KEYCLOAK_HOST=<<INSERT_YOUR_IP>>
